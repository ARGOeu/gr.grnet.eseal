(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[47],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(t),m=a,g=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1518:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return l},default:function(){return p}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),o={id:"signing",title:"PDF Signing API Calls",sidebar_label:"PDF Signing API Calls",keywords:["eseal","e-seal","signing","api","doc","docs","documentation","documents","pdf","grnet"]},s={unversionedId:"signing",id:"signing",isDocsHomePage:!1,title:"PDF Signing API Calls",description:"POST - Sign a PDF document",source:"@site/docs/signing.md",sourceDirName:".",slug:"/signing",permalink:"/gr.grnet.eseal/docs/signing",version:"current",sidebar_label:"PDF Signing API Calls",frontMatter:{id:"signing",title:"PDF Signing API Calls",sidebar_label:"PDF Signing API Calls",keywords:["eseal","e-seal","signing","api","doc","docs","documentation","documents","pdf","grnet"]},sidebar:"someSidebar",previous:{title:"E-seal REST API Documentation",permalink:"/gr.grnet.eseal/docs/"},next:{title:"PDF Validation API Calls",permalink:"/gr.grnet.eseal/docs/validation"}},l=[{value:"POST - Sign a PDF document",id:"post---sign-a-pdf-document",children:[{value:"Request",id:"request",children:[]},{value:"Request Body",id:"request-body",children:[]},{value:"Response Body",id:"response-body",children:[]}]},{value:"POST - Sign a PDF document detached",id:"post---sign-a-pdf-document-detached",children:[{value:"Request",id:"request-1",children:[]},{value:"Request Body",id:"request-body-1",children:[]},{value:"Response Body",id:"response-body-1",children:[]},{value:"Handling of TOTP",id:"handling-of-totp",children:[]},{value:"Errors",id:"errors",children:[]}]}],d={toc:l};function p(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"post---sign-a-pdf-document"},"POST - Sign a PDF document"),(0,i.kt)("h3",{id:"request"},"Request"),(0,i.kt)("b",null,"POST")," @ ",(0,i.kt)("i",null,"/api/v1/signing/remoteSignDocument"),(0,i.kt)("h3",{id:"request-body"},"Request Body"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"username")," : Username to be used at the remote provider API call.\nThe username/password pair maps to a specific eseal.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"password")," : Password to be used at the remote provider API call.\nThe username/password pair maps to a specific eseal.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"key")," :  Key that will be used with the TOTP generation.\nEach username/password pair corresponds to a specific key.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"toSignDocument.bytes")," : PDF document to be signed in base64 encoded format")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"toSignDocument.name"),": Placeholder name for the pdf document"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "username": "example-user",\n    "password": "example-password",\n    "key": "example-key",\n    "toSignDocument": {\n        "name": "document.pdf",\n        "bytes": "JVBERi0xLjM..."\n        }\n}\n')),(0,i.kt)("h3",{id:"response-body"},"Response Body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "signedDocumentBytes": "JVBER..=="\n}\n')),(0,i.kt)("h2",{id:"post---sign-a-pdf-document-detached"},"POST - Sign a PDF document detached"),(0,i.kt)("p",null,"This API call does not send the entire PDF to the remote eseal provider for signing\nbut rather only the digest(hash) of the provided document and finally it combines\nthe returned signature with the original pdf document.The signature will also be visible\ncontaining an image and the CN/OU from the signing certificate."),(0,i.kt)("h3",{id:"request-1"},"Request"),(0,i.kt)("b",null,"POST")," @ ",(0,i.kt)("i",null,"/api/v1/signing/remoteSignDocumentDetached"),(0,i.kt)("h3",{id:"request-body-1"},"Request Body"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"username")," : Username to be used at the remote provider API call.\nThe username/password pair maps to a specific eseal.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"password")," : Password to be used at the remote provider API call.\nThe username/password pair maps to a specific eseal.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"key")," :  Key that will be used with the TOTP generation.\nEach username/password pair corresponds to a specific key.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"imageBytes(optional)")," :  Custom image to be included into the visible signature and\noverride the default, in base64 encoded format.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"toSignDocument.bytes")," : PDF document to be signed in base64 encoded format")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"toSignDocument.name"),": Placeholder name for the pdf document"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "username": "example-user",\n    "password": "example-password",\n    "key": "example-key",\n    "imageBytes": "MJIDdijo...",\n    "toSignDocument": {\n        "name": "document.pdf",\n        "bytes": "JVBERi0xLjM..."\n        }\n}\n')),(0,i.kt)("h3",{id:"response-body-1"},"Response Body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "signedDocumentBytes": "JVBER..=="\n}\n')),(0,i.kt)("h3",{id:"handling-of-totp"},"Handling of TOTP"),(0,i.kt)("p",null,"The generated tokens are being created with the use of the ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA1 hashing algorithm"),".\nThey are ",(0,i.kt)("inlineCode",{parentName:"p"},"6 digits long")," and have a\n",(0,i.kt)("inlineCode",{parentName:"p"},"30 seconds duration"),", counting from the beginning of the unix epoch.\nThere are 2 TOTP tokens per minute, one from the ",(0,i.kt)("inlineCode",{parentName:"p"},"0th - 30th")," second and one\nfrom the ",(0,i.kt)("inlineCode",{parentName:"p"},"30th - 60th")," second.\nIn order to compensate for network latency we apply a fail safe mechanism of 5 seconds before\nwe send any generated TOTP to the provider's backend, meaning that tokens acquired\nbetween the ",(0,i.kt)("inlineCode",{parentName:"p"},"25th - 30th")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"55th - 60th"),"\nseconds of a minute will be waited to expire so a new one can be generated, with enough remaining time,\nin order to give a higher success probability for the request."),(0,i.kt)("h3",{id:"errors"},"Errors"),(0,i.kt)("p",null,"Please refer to section ",(0,i.kt)("a",{parentName:"p",href:"/gr.grnet.eseal/docs/errors"},"Errors")," to see all possible Errors"))}p.isMDXComponent=!0}}]);