(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[328,258],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return c}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=l(t),c=o,k=d["".concat(s,".").concat(c)]||d[c]||u[c]||r;return t?a.createElement(k,i(i({ref:n},m),{},{components:t})):a.createElement(k,i({ref:n},m))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<r;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9229:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var a=t(2122),o=t(9756),r=(t(7294),t(3905)),i={},p={unversionedId:"examples/e_signature_rest_api.postman_collection",id:"examples/e_signature_rest_api.postman_collection",isDocsHomePage:!1,title:"e_signature_rest_api.postman_collection",description:"`json",source:"@site/docs/examples/e_signature_rest_api.postman_collection.md",sourceDirName:"examples",slug:"/examples/e_signature_rest_api.postman_collection",permalink:"/gr.grnet.eseal/docs/examples/e_signature_rest_api.postman_collection",version:"current",frontMatter:{}},s=[],l={toc:s};function m(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "info": {\n        "_postman_id": "3a80f05d-5942-43d8-bf3a-068b8d36297f",\n        "name": "E-signature Rest API",\n        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"\n    },\n    "item": [\n        {\n            "name": "PDF Validation",\n            "request": {\n                "method": "POST",\n                "header": [\n                    {\n                        "key": "Content-Type",\n                        "value": "application/json",\n                        "type": "text"\n                    }\n                ],\n                "body": {\n                    "mode": "raw",\n                    "raw": "{\\n\\t\\"signedDocument\\": {\\n\\t\\t\\"name\\": \\"{{pdf_name_to_validate}}\\",\\n\\t\\t\\"bytes\\": \\"{{pdf_base64_to_validate}}\\"\\n\\t\\t\\n\\t}\\n}"\n                },\n                "url": {\n                    "raw": "{{protocol}}://{{base_url}}:{{port}}/{{validation_path}}/{{validation_endpoint}}",\n                    "protocol": "{{protocol}}",\n                    "host": [\n                        "{{base_url}}"\n                    ],\n                    "port": "{{port}}",\n                    "path": [\n                        "{{validation_path}}",\n                        "{{validation_endpoint}}"\n                    ]\n                }\n            },\n            "response": []\n        },\n        {\n            "name": "PDF Timestamp",\n            "request": {\n                "method": "POST",\n                "header": [\n                    {\n                        "key": "Content-Type",\n                        "value": "application/json",\n                        "type": "text"\n                    }\n                ],\n                "body": {\n                    "mode": "raw",\n                    "raw": "{\\n\\t\\"toTimestampDocument\\": {\\n\\t\\t\\"name\\": \\"{{pdf_name_to_timestamp}}\\",\\n\\t\\t\\"bytes\\": \\"{{pdf_base64_to_timestamp}}\\"\\n\\t}\\n}"\n                },\n                "url": {\n                    "raw": "{{protocol}}://{{base_url}}:{{port}}/{{timestamp_path}}/{{timestamp_endpoint}}",\n                    "protocol": "{{protocol}}",\n                    "host": [\n                        "{{base_url}}"\n                    ],\n                    "port": "{{port}}",\n                    "path": [\n                        "{{timestamp_path}}",\n                        "{{timestamp_endpoint}}"\n                    ]\n                }\n            },\n            "response": []\n        },\n        {\n            "name": "PDF Signing",\n            "request": {\n                "method": "POST",\n                "header": [\n                    {\n                        "key": "Content-Type",\n                        "value": "application/json",\n                        "type": "text"\n                    }\n                ],\n                "body": {\n                    "mode": "raw",\n                    "raw": "{\\n\\t\\"username\\": \\"{{username}}\\",\\n\\t\\"password\\": \\"{{password}}\\",\\n\\t\\"key\\": \\"{{key}}\\",\\n\\t\\"toSignDocument\\": {\\n\\t\\t\\"name\\": \\"{{pdf_name_to_sign}}\\",\\n        \\"bytes\\": \\"{{pdf_base64_to_sign}}\\"\\n\\t}\\n}"\n                },\n                "url": {\n                    "raw": "{{protocol}}://{{base_url}}:{{port}}/{{signing_path}}/{{signing_endpoint}}",\n                    "protocol": "{{protocol}}",\n                    "host": [\n                        "{{base_url}}"\n                    ],\n                    "port": "{{port}}",\n                    "path": [\n                        "{{signing_path}}",\n                        "{{signing_endpoint}}"\n                    ]\n                }\n            },\n            "response": []\n        }\n    ],\n    "event": [\n        {\n            "listen": "prerequest",\n            "script": {\n                "type": "text/javascript",\n                "exec": [\n                    ""\n                ]\n            }\n        },\n        {\n            "listen": "test",\n            "script": {\n                "type": "text/javascript",\n                "exec": [\n                    ""\n                ]\n            }\n        }\n    ],\n    "variable": [\n        {\n            "key": "protocol",\n            "value": "https"\n        },\n        {\n            "key": "base_url",\n            "value": "eseal.devel.einfra.grnet.gr"\n        },\n        {\n            "key": "port",\n            "value": "443"\n        },\n        {\n            "key": "username",\n            "value": ""\n        },\n        {\n            "key": "password",\n            "value": ""\n        },\n        {\n            "key": "key",\n            "value": ""\n        },\n        {\n            "key": "signing_path",\n            "value": "api/v1/signing"\n        },\n        {\n            "key": "signing_endpoint",\n            "value": "remoteSignDocumentDetached"\n        },\n        {\n            "key": "pdf_name_to_sign",\n            "value": "to_sign.pdf"\n        },\n        {\n            "key": "pdf_base64_to_sign",\n            "value": ""\n        },\n        {\n            "key": "validation_path",\n            "value": "api/v1/validation"\n        },\n        {\n            "key": "validation_endpoint",\n            "value": "validateDocument"\n        },\n        {\n            "key": "pdf_name_to_validate",\n            "value": "to_validate.pdf"\n        },\n        {\n            "key": "pdf_base64_to_validate",\n            "value": ""\n        },\n        {\n            "key": "timestamp_path",\n            "value": "api/v1/timestamping"\n        },\n        {\n            "key": "timestamp_endpoint",\n            "value": "remoteTimestampDocument"\n        },\n        {\n            "key": "pdf_name_to_timestamp",\n            "value": "to_timestamp.pdf"\n        },\n        {\n            "key": "pdf_base64_to_timestamp",\n            "value": ""\n        }\n    ]\n}\n')))}m.isMDXComponent=!0},5849:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var a=t(2122),o=t(9756),r=(t(7294),t(3905)),i=t(9229),p={id:"postman",title:"Postman Instructions",sidebar_label:"Postman Instructions",keywords:["eseal","e-seal","validation","api","doc","docs","documentation","documents","pdf","grnet","postman","json"]},s={unversionedId:"postman",id:"postman",isDocsHomePage:!1,title:"Postman Instructions",description:"Prerequisites",source:"@site/docs/postman.md",sourceDirName:".",slug:"/postman",permalink:"/gr.grnet.eseal/docs/postman",version:"current",sidebar_label:"Postman Instructions",frontMatter:{id:"postman",title:"Postman Instructions",sidebar_label:"Postman Instructions",keywords:["eseal","e-seal","validation","api","doc","docs","documentation","documents","pdf","grnet","postman","json"]}},l=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Instructions",id:"instructions",children:[]},{value:"PDF Signing",id:"pdf-signing",children:[]},{value:"PDF Timestamp",id:"pdf-timestamp",children:[]},{value:"PDF Validation",id:"pdf-validation",children:[]}],m={toc:l};function u(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Postman")),(0,r.kt)("h3",{id:"instructions"},"Instructions"),(0,r.kt)("p",null,"in order to communicate with E-Signature Rest API the following provided collection should be imported on Postman platform."),(0,r.kt)(i.default,{mdxType:"PostmanExample"}),(0,r.kt)("p",null,"Into collection, you can find the environment variables which are important in order to execute requests on API."),(0,r.kt)("p",null,"The following variables are predefined and should not be changed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    {\n        "key": "protocol",\n        "value": "https"\n    },\n    {\n        "key": "base_url",\n        "value": "eseal.devel.einfra.grnet.gr"\n    },\n    {\n        "key": "port",\n        "value": "443"\n    },\n    {\n        "key": "signing_path",\n        "value": "api/v1/signing"\n    },\n    {\n        "key": "signing_endpoint",\n        "value": "remoteSignDocumentDetached"\n    },\n    {\n        "key": "validation_path",\n        "value": "api/v1/validation"\n    },\n    {\n        "key": "validation_endpoint",\n        "value": "validateDocument"\n    },\n    {\n        "key": "timestamp_path",\n        "value": "api/v1/timestamping"\n    },\n    {\n        "key": "timestamp_endpoint",\n        "value": "remoteTimestampDocument"\n    }\n')),(0,r.kt)("p",null,"The following variables are empty and should be filled in approprielly. The ",(0,r.kt)("inlineCode",{parentName:"p"},"username"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"password")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," will be provided by GRNET and the rest variables should be filled in by user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    {\n        "key": "username",\n        "value": ""\n    },\n    {\n        "key": "password",\n        "value": ""\n    },\n    {\n        "key": "key",\n        "value": ""\n    },\n    {\n        "key": "pdf_base64_to_sign",\n        "value": ""\n    },\n    {\n        "key": "pdf_base64_to_validate",\n        "value": ""\n    },\n    {\n        "key": "pdf_base64_to_timestamp",\n        "value": ""\n    }\n')),(0,r.kt)("p",null,"Finally , you can find the following 3 POST requests : "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/gr.grnet.eseal/docs/signing#post---sign-a-pdf-document-detached"},(0,r.kt)("em",{parentName:"a"},"PDF Signing")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/gr.grnet.eseal/docs/timestamp"},(0,r.kt)("em",{parentName:"a"},"PDF Timestamp")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/gr.grnet.eseal/docs/validation"},(0,r.kt)("em",{parentName:"a"},"PDF Validation"))))),(0,r.kt)("h3",{id:"pdf-signing"},"PDF Signing"),(0,r.kt)("p",null,"In order to sign a pdf :"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://base64.guru/converter/encode/pdf"},(0,r.kt)("em",{parentName:"a"},"Convert the pdf to Base64 format")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Fill in the variable pdf_base64_to_sign"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Execute the PDF Signing request")))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Response Body :")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'{\n"signedDocumentBytes": "JVBER..=="\n}')),(0,r.kt)("p",null,"In order to convert the ",(0,r.kt)("inlineCode",{parentName:"p"},"signedDocumentBytes")," to PDF you can use the following platform ",(0,r.kt)("a",{parentName:"p",href:"https://base64.guru/converter/decode/pdf"},"Base64 to PDF"),"."),(0,r.kt)("h3",{id:"pdf-timestamp"},"PDF Timestamp"),(0,r.kt)("p",null,"In order to timestamp a pdf :"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://base64.guru/converter/encode/pdf"},(0,r.kt)("em",{parentName:"a"},"Convert the pdf to Base64 format")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Fill in the variable pdf_base64_to_timestamp"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Execute the PDF Timestamp request")))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Response body :")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'{\n"timestampedDocumentBytes": "JVBERi0xL..."\n}')),(0,r.kt)("p",null,"In order to convert the ",(0,r.kt)("inlineCode",{parentName:"p"},"timestampedDocumentBytes")," to PDF you can use the following platform ",(0,r.kt)("a",{parentName:"p",href:"https://base64.guru/converter/decode/pdf"},"Base64 to PDF"),"."),(0,r.kt)("h3",{id:"pdf-validation"},"PDF Validation"),(0,r.kt)("p",null,"In order to validate a signed/timestamped pdf :"),(0,r.kt)("p",null,"1) ",(0,r.kt)("em",{parentName:"p"},"Get the signedDocumentBytes/timestampedDocumentBytes response parameter respectively")),(0,r.kt)("p",null,"2) ",(0,r.kt)("em",{parentName:"p"},"Fill in the variable pdf_base64_to_validate")),(0,r.kt)("p",null,"3) ",(0,r.kt)("em",{parentName:"p"},"Execute the PDF Validation request")))}u.isMDXComponent=!0}}]);